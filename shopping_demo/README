
HOW TO RUN AND WHAT TO DO

============ How to run the best location inference: ============ 
- checkout and make packages:
    -  checkout knowrob/comp_orgprinciples
    - $ rosmake comp_orgprinciples
    - $ rosmake shopping demo

- run roscore
    - $ roscore

- launch knowrob with the comp_orgprinciples module
    - $ cd comp_orgprinciples/launch/
    - $ roslaunch comp_orgprinciples.launch

- start test client: query_comp_orgprinciples
    - $ cd shopping_demo/bin
    - $ ./query_comp_orgprinciples


- for the demo: add new product classes and instances to ontology:
    - use e.g. Protege to edit comp_orgprinciples/owl/orgprinciples_demo.owl
    - use "cont-InGeneric" object properties to place objects at location instances from the ccrl2_semantic_map 
================================================================= 

============ The URDF kitchen model ============
// When not running on the robot //
// Do not forget to set the path of the input .bag file in the .launch file //

roslaunch shopping_demo shopping_demo.launch
rosrun rviz rviz -d launch/shopping_demo.vcg 

// And do not forget to press <SAPCE> for playing the .bag file //
================================================

============ Open/Close Drawers ============
Open/Close Drawer
rostopic pub /ias_kitchen/joint_states sensor_msgs/JointState '{name : [sink_block_drawer_sink_col1_top_joint], position: [0.25]}'
rostopic pub /ias_kitchen/joint_states sensor_msgs/JointState '{name : [sink_block_drawer_sink_col1_top_joint], position: [-0.25]}'

Open/Close Fridge
rostopic pub /ias_kitchen/joint_states sensor_msgs/JointState '{name : [fridge_block_fridge_joint], position : [1.50]}'
rostopic pub /ias_kitchen/joint_states sensor_msgs/JointState '{name : [fridge_block_fridge_joint], position : [0.0]}'
============================================

============ TODO ============
* add counter/shelves inside cabinets/cupboards to URDF kitchen model
==============================

